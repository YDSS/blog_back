@charset "UTF-8";
/* media break point  */
/* 侧边栏与主体的适配宽度 */
html, body {
  height: 100%; }

.wrapper {
  width: 100%;
  height: 100%; }
  .wrapper .body {
    margin-left: 270px; }
    @media screen and (max-width: 800px) {
      .wrapper .body {
        margin-left: 180px; } }
    @media screen and (max-width: 440px) {
      .wrapper .body {
        margin-left: 0; } }
  .wrapper .sidebar {
    width: 270px; }
    @media screen and (max-width: 800px) {
      .wrapper .sidebar {
        width: 180px; } }
    @media screen and (max-width: 440px) {
      .wrapper .sidebar {
        display: none; } }

@charset "UTF-8";
/* media break point  */
/* 侧边栏与主体的适配宽度 */
.avatar {
  width: 100%;
  text-align: center; }
  .avatar img {
    width: 100%;
    max-width: 120px;
    border-radius: 25%;
    box-shadow: 0 0 3px 2px #fefefe; }
  .avatar p {
    font: 700 16px normal;
    color: #fff;
    text-align: center; }

.article {
  width: 100%;
  padding: 0 70px 50px 40px;
  box-sizing: border-box; }

.list-item {
  margin-bottom: 10px;
  padding-bottom: 20px;
  border-bottom: 1px solid #eee; }
  .list-item .title {
    margin-bottom: 10px; }
  .list-item .info-bar {
    font: 500 14px/20px normal;
    color: #333; }
    .list-item .info-bar .time {
      margin-right: 20px; }
  .list-item .tags {
    overflow: hidden;
    *zoom: 1;
    margin-top: 5px; }
    .list-item .tags .tag {
      float: left;
      padding: 2px 3px;
      margin-right: 10px;
      color: #ccc;
      border: 1px solid #666;
      border-radius: 5px; }
  .list-item .abs {
    font: 500 20px/28px normal;
    color: #666;
    margin-bottom: 10px; }
  .list-item a {
    text-decoration: none; }
    .list-item a:hover {
      text-decoration: underline; }

.pagination {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
  margin: 20px 40px 20px 0;
  padding: 0;
  list-style-type: none; }
  .pagination > li {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1;
    max-width: 35px;
    height: 35px;
    color: #2879d0;
    background-color: #fff;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -ms-border-radius: 5px;
    -o-border-radius: 5px;
    border-radius: 5px;
    text-align: center; }
    .pagination > li:hover, .pagination > li:active, .pagination > li.current {
      background-color: #428bca;
      color: #fff;
      cursor: pointer; }
    .pagination > li.ban:hover, .pagination > li.ban:active {
      background-color: #fff;
      color: #2879d0;
      cursor: default; }
  .pagination .page {
    font: 500 14px / 35px normal; }
  .pagination .fa {
    line-height: 30px;
    font-size: 24px; }

.content {
  width: 100%;
  padding: 0 70px 0 40px;
  box-sizing: border-box; }
  .content .list-item {
    margin-bottom: 10px; }

.editor {
  width: 100%;
  padding: 20px;
  box-sizing: border-box; }
  .editor textarea {
    width: 100%;
    min-height: 600px;
    padding: 10px;
    border: 1px solid #ccc;
    overflow-x: scroll;
    overflow-y: visible;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -ms-border-radius: 5px;
    -o-border-radius: 5px;
    border-radius: 5px; }
  .editor .btns {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex; }
  .editor .btn {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1;
    height: 32px;
    padding: 0 25.6px;
    margin-top: 10px;
    margin-right: 20px;
    font: 300 16px/30px normal;
    text-decoration: none;
    text-align: center;
    border-radius: 50px;
    background: #00a1cb;
    cursor: pointer;
    color: #fff;
    vertical-align: middle;
    -webkit-transition: compact(compact(background 0.3s linear, false, false, false, false, false, false, false, false, false) false false);
    -moz-transition: compact(compact(background 0.3s linear, false, false, false, false, false, false, false, false, false) false false false);
    -o-transition: compact(compact(background 0.3s linear, false, false, false, false, false, false, false, false, false) false false false);
    transition: compact(background 0.3s linear, false, false, false, false, false, false, false, false, false); }
    .editor .btn:hover {
      background: #00b5e5; }
    .editor .btn:active {
      background: #1495b7; }
    .editor .btn:last-child {
      margin-right: 0; }

.list-item {
  margin-bottom: 10px;
  padding-bottom: 20px;
  border-bottom: 1px solid #eee; }
  .list-item .title {
    margin-bottom: 10px; }
  .list-item .info-bar {
    font: 500 14px/20px normal;
    color: #333; }
    .list-item .info-bar .time {
      margin-right: 20px; }
  .list-item .tags {
    overflow: hidden;
    *zoom: 1;
    margin-top: 5px; }
    .list-item .tags .tag {
      float: left;
      padding: 2px 3px;
      margin-right: 10px;
      color: #ccc;
      border: 1px solid #666;
      border-radius: 5px; }
  .list-item .abs {
    font: 500 20px/28px normal;
    color: #666;
    margin-bottom: 10px; }
  .list-item a {
    text-decoration: none; }
    .list-item a:hover {
      text-decoration: underline; }

.nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column nowrap;
  -moz-flex-flow: column nowrap;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center; }
  .nav .item {
    width: 82px;
    margin-bottom: 20px;
    font: 700 16px/20px normal;
    color: #fff;
    text-decoration: none;
    transition: transform .5s ease; }
    .nav .item:hover {
      transform: translate3d(10px, 0, 0); }
    .nav .item i {
      font-size: 20px;
      margin-right: 10px; }

.pagination {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
  margin: 20px 40px 20px 0;
  padding: 0;
  list-style-type: none; }
  .pagination > li {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1;
    max-width: 35px;
    height: 35px;
    color: #2879d0;
    background-color: #fff;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -ms-border-radius: 5px;
    -o-border-radius: 5px;
    border-radius: 5px;
    text-align: center; }
    .pagination > li:hover, .pagination > li:active, .pagination > li.current {
      background-color: #428bca;
      color: #fff;
      cursor: pointer; }
    .pagination > li.ban:hover, .pagination > li.ban:active {
      background-color: #fff;
      color: #2879d0;
      cursor: default; }
  .pagination .page {
    font: 500 14px / 35px normal; }
  .pagination .fa {
    line-height: 30px;
    font-size: 24px; }

@charset "UTF-8";
/* media break point  */
/* 侧边栏与主体的适配宽度 */
/* media break point  */
/* 侧边栏与主体的适配宽度 */
.avatar {
  width: 100%;
  text-align: center; }
  .avatar img {
    width: 100%;
    max-width: 120px;
    border-radius: 25%;
    box-shadow: 0 0 3px 2px #fefefe; }
  .avatar p {
    font: 700 16px normal;
    color: #fff;
    text-align: center; }

.nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column nowrap;
  -moz-flex-flow: column nowrap;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center; }
  .nav .item {
    width: 82px;
    margin-bottom: 20px;
    font: 700 16px/20px normal;
    color: #fff;
    text-decoration: none;
    transition: transform .5s ease; }
    .nav .item:hover {
      transform: translate3d(10px, 0, 0); }
    .nav .item i {
      font-size: 20px;
      margin-right: 10px; }

.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  box-shadow: 1px 0 4px 1px #ccc; }
  .sidebar .avatar,
  .sidebar .nav {
    position: relative;
    z-index: 100; }
  .sidebar .avatar {
    margin-top: 20px;
    margin-bottom: 50px; }
  .sidebar .bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url(/img/bg.jpeg) no-repeat;
    background-size: cover;
    -webkit-filter: blur(1px);
    z-index: 1; }

/*# sourceMappingURL=data:application/json;base64, */
